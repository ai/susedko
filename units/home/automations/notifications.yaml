- id: notify_on_vacuum_unavailable
  alias: Уведомление о недоступности пылесоса
  triggers:
    - trigger: time
      at: "11:30:00"
  conditions:
    - condition: state
      entity_id: sensor.vacuum_roborock_q7_max_battery
      state: "unavailable"
    - condition: state
      entity_id: input_boolean.stop
      state: "off"
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
  actions:
    - action: notify.mobile_app_atocha
      data:
        title: "Робот-пылесос"
        message: "Недоступен"

- id: notify_cleaning_started
  alias: Уведомить о начале уборки
  triggers:
    - trigger: state
      entity_id: vacuum.vacuum_roborock_q7_max
      to: "cleaning"
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
  actions:
    - action: notify.notify
      data:
        title: Робот-пылесос
        message: "Начал уборку"
        data:
          clickAction: /lovelace/cleaning

- id: notify_cleaning_error
  alias: Уведомить о ошибке уборки
  triggers:
    - trigger: state
      entity_id: sensor.vacuum_roborock_q7_max_vacuum_error
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
    - condition: template
      value_template: >
        {{ states('sensor.vacuum_roborock_q7_max_vacuum_error') not in ['unavailable', 'unknown', 'none'] }}
  actions:
    - action: notify.notify
      data:
        title: Робот-пылесос
        message: "Уборка остановлена из-за ошибки {{ states('sensor.vacuum_roborock_q7_max_vacuum_error') }}"

- id: notify_cleaning_finished
  alias: Уведомить о завершении уборки
  triggers:
    - trigger: state
      entity_id: vacuum.vacuum_roborock_q7_max
      from:
        - "cleaning"
        - "returning"
        - "emptying_the_bin"
      to: "docked"
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
  actions:
    - action: notify.notify
      data:
        title: Робот-пылесос
        message: "Закончил уборку"

- id: notify_on_guest_morning
  alias: Уведомление о том, что забыли выключить Гости
  triggers:
    - trigger: time
      at: "11:30:00"
  conditions:
    - condition: state
      entity_id: input_boolean.stop
      state: "off"
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: input_boolean.guests
      state: "on"
    - condition: state
      entity_id: person.andrey_sitnik
      state: "home"
  actions:
    - action: notify.mobile_app_atocha
      data:
        title: "Режим Гости"
        message: "Включён"

- id: notify_door_opened
  alias: Уведомить об открытии двери
  triggers:
    - trigger: state
      entity_id: binary_sensor.door_ikea_entrance_contact
      from: "off"
      to: "on"
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
  actions:
    - if:
        - condition: state
          entity_id: person.andrey_sitnik
          state: "not_home"
      then:
        - delay: "00:00:15"
        - if:
            - condition: state
              entity_id: person.andrey_sitnik
              state: "not_home"
          then:
            - action: notify.mobile_app_atocha
              data:
                title: "Дверь"
                message: "Открыта"
    - if:
        - condition: state
          entity_id: person.ekaterina_sitnik
          state: "not_home"
      then:
        - delay: "00:00:15"
        - if:
            - condition: state
              entity_id: person.ekaterina_sitnik
              state: "not_home"
          then:
            - action: notify.mobile_app_pixel_7a
              data:
                title: "Дверь"
                message: "Открыта"

- id: notify_door_open_too_long
  alias: Уведомить о двери открытой слишком долго
  triggers:
    - trigger: state
      entity_id: binary_sensor.door_ikea_entrance_contact
      from: "off"
      to: "on"
      for:
        minutes: 10
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
  actions:
    - action: notify.mobile_app_atocha
      data:
        title: "Дверь"
        message: "Открыта более 10 минут"
    - if:
        - condition: state
          entity_id: person.ekaterina_sitnik
          state: "home"
      then:
        - action: notify.mobile_app_pixel_7a
          data:
            title: "Дверь"
            message: "Открыта более 10 минут"

- id: low_battery_notify
  alias: Уведомить о разряде батареи
  variables:
    threshold: 30
    sensors: >-
      {% set result = namespace(sensors=[]) %}
      {% for state in states.sensor | selectattr('attributes.device_class', '==', 'battery') %}
        {% if 0 <= state.state | int(-1) < threshold | int %}
          {% set result.sensors = result.sensors + [state.name ~ ' (' ~ state.state ~ ' %)'] %}
        {% endif %}
      {% endfor %}
      {{result.sensors|join(', ')}}
  mode: single
  triggers:
    - trigger: time
      at: "10:00:00"
  conditions:
    - "{{ sensors != '' }}"
  actions:
    - action: notify.mobile_app_atocha
      data:
        title: "Дом"
        message: "Садиться батарея: {{ sensors }}"

- id: co2_andrey_notification
  alias: Уведомить Андрея о высоком уровне CO2
  triggers:
    - trigger: numeric_state
      entity_id: sensor.presence_apollo_msr_2_co2
      above: 1000
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: person.andrey_sitnik
      state: "home"
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
  actions:
    - action: notify.mobile_app_atocha
      data:
        title: "CO²"
        message: "Высокий уровень: {{ states('sensor.presence_apollo_msr_2_co2') }}"

- id: notify_air_balcony
  alias: Предупредить о плохом воздухе, когда проветриваем балкон
  triggers:
    - trigger: state
      entity_id: binary_sensor.door_ikea_balcony_right_contact
      to: "on"
      for: "00:05:00"
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: numeric_state
      entity_id: sensor.weather_waqi_air_quality_index
      above: 50
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
  actions:
    - choose:
        - conditions:
            - condition: state
              entity_id: person.andrey_sitnik
              state: "not_home"
          sequence:
            - action: notify.mobile_app_atocha
              data:
                title: "Качество воздуха: {{ states('sensor.weather_waqi_air_quality_index') }}"
                message: "Лучше не проветривать сегодня"
        - conditions:
            - condition: state
              entity_id: person.ekaterina_sitnik
              state: "not_home"
          sequence:
            - action: notify.mobile_app_pixel_7a
              data:
                title: "Качество воздуха: {{ states('sensor.weather_waqi_air_quality_index') }}"
                message: "Лучше не проветривать сегодня"

- id: notify_air_quality_eddie
  alias: Предупредить о плохом воздухе, когда забираем Эди
  triggers:
    - trigger: time
      at: "16:20:00"
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: numeric_state
      entity_id: sensor.weather_waqi_air_quality_index
      above: 50
    - condition: numeric_state
      entity_id: sensor.weather_accuweather_realfeel_temperature
      below: 30
    - condition: state
      entity_id: input_boolean.cat_alone
      state: "off"
    - condition: state
      entity_id: input_boolean.child_home
      state: "on"
    - condition: state
      entity_id: input_boolean.other_people
      state: "off"
    - or:
        - condition: time
          weekday:
            - mon
        - condition: time
          weekday:
            - tue
        - condition: time
          weekday:
            - wed
        - condition: time
          weekday:
            - thu
        - condition: time
          weekday:
            - fri
  actions:
    - action: notify.notify
      data:
        title: "Качество воздуха: {{ states('sensor.weather_waqi_air_quality_index') }}"
        message: "Лучше Эди не гулять"

- id: notify_balcony_opened
  alias: Уведомить об открытии балкона, когда нас нет
  triggers:
    - trigger: state
      entity_id: binary_sensor.door_ikea_balcony_left_contact
      from: "off"
      to: "on"
    - trigger: state
      entity_id: binary_sensor.door_ikea_balcony_right_contact
      from: "off"
      to: "on"
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - condition: state
      entity_id: input_boolean.home_empty
      state: "on"
    - condition: state
      entity_id: input_boolean.other_people
      state: "on"
  actions:
    - action: notify.notify
      data:
        title: "Балкон"
        message: "Открыт"

- id: notify_balcony_forgot
  alias: Уведомить об открытии балкона, когда мы забыли его закрыть
  triggers:
    - trigger: state
      entity_id: input_boolean.home_empty
      to: "on"
  conditions:
    - condition: state
      entity_id: input_boolean.notifications
      state: "on"
    - or:
        - condition: state
          entity_id: binary_sensor.door_ikea_balcony_left_contact
          state: "on"
        - condition: state
          entity_id: binary_sensor.door_ikea_balcony_right_contact
          state: "on"
  actions:
    - action: notify.notify
      data:
        title: "Балкон"
        message: "Забыли закрыть"
