blueprint:
  name: Свет по датчику присутствия
  description: Включает свет когда кто-то находится в комнате
  domain: automation
  input:
    presence_sensor:
      name: Датчик присутствия
      selector:
        entity:
          filter:
            - device_class: occupancy
              domain: binary_sensor
            - device_class: motion
              domain: binary_sensor
            - device_class: presence
              domain: binary_sensor
    light:
      name: Лампа
      selector:
        target:
          entity:
            domain: light
    after_off:
      name: Дополнительное действие при включении
      default: []
      selector:
        action: {}
    night_scene:
      name: Ночной режим
      default: null
      selector:
        entity:
          domain: scene
    scene_helper:
      name: "Индекс сцены для сброса"
      default: null
      selector:
        entity:
          domain: input_number

mode: restart

triggers:
  - trigger: state
    entity_id: !input presence_sensor
    from: "off"
    to: "on"

conditions:
  - condition: state
    entity_id: input_boolean.stop
    state: "off"
  - condition: state
    entity_id: input_boolean.cat_alone
    state: "off"

variables:
  current_night_scene: !input night_scene
  current_scene_helper: !input scene_helper

actions:
  - if:
      - condition: template
        value_template: "{{ current_scene_helper is not none  }}"
    then:
      - action: input_number.set_value
        data:
          entity_id: !input scene_helper
          value: "0"
  - if:
      - condition: state
        entity_id: input_boolean.everyone_sleep
        state: "on"
    then:
      - if:
          - condition: template
            value_template: "{{ current_night_scene is not none  }}"
        then:
          - action: scene.turn_on
            target:
              entity_id: !input night_scene
          - wait_for_trigger:
              trigger: state
              entity_id: !input presence_sensor
              from: "on"
              to: "off"
          - action: light.turn_off
            target: !input light
          - sequence: !input after_off
    else:
      - action: light.turn_on
        target: !input light
      - wait_for_trigger:
          trigger: state
          entity_id: !input presence_sensor
          from: "on"
          to: "off"
      - if:
          - condition: state
            entity_id: input_boolean.stop
            state: "off"
        then:
          - action: light.turn_off
            target: !input light
          - sequence: !input after_off
