blueprint:
  name: Выключатель
  description: Логика работы настенных выключателей с 4 кнопками
  domain: automation
  input:
    wall_switch:
      name: ID устройства
      selector:
        device:
          integration: mqtt
          manufacturer: Yandex
    light:
      name: Лампа для управления
      selector:
        entity:
          filter:
            domain: light
    before_on:
      name: Дополнительное действие при включении
      selector:
        action: {}
      default: []
    after_off:
      name: Дополнительное действие при выключении
      selector:
        action: {}
      default: []
    room:
      name: Код комнаты
      selector:
        text:
    scene_helper:
      name: "Индекс сцены"
      selector:
        entity:
          domain: input_number
    reverse:
      name: Поменять местами левую и правую кнопки
      default: false
      selector:
        boolean: {}
    extra_light:
      name: Управлять другой лампой вместо яркости
      default: null
      selector:
        entity:
          filter:
            domain: light
    long_off:
      name: Долгое нажатие на выключение
      selector:
        action: {}
      default: []
    stop_helper:
      name: "Блокиратор авто-выключения"
      default: null
      selector:
        entity:
          domain: input_boolean
    direct_link:
      name: "У выключателя и лампы есть прямая связь"
      default: false
      selector:
        boolean: {}

mode: restart

trigger_variables:
  current_reverse: !input reverse

triggers:
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b1_up
    enabled: "{{ not current_reverse }}"
    id: turn_on
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b2_up
    enabled: "{{ current_reverse }}"
    id: turn_on

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b1_down
    enabled: "{{ not current_reverse }}"
    id: turn_off
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b2_down
    enabled: "{{ current_reverse }}"
    id: turn_off

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b2_up
    enabled: "{{ not current_reverse }}"
    id: brighter
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b1_up
    enabled: "{{ current_reverse }}"
    id: brighter

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b2_down
    enabled: "{{ not current_reverse }}"
    id: darker
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: toggle_b1_down
    enabled: "{{ current_reverse }}"
    id: darker

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: on_b1_up
    enabled: "{{ not current_reverse }}"
    id: fast_turn_on
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: on_b2_up
    enabled: "{{ current_reverse }}"
    id: fast_turn_on

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: off_b1_down
    enabled: "{{ not current_reverse }}"
    id: full_turn_off
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: off_b2_down
    enabled: "{{ current_reverse }}"
    id: full_turn_off

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: on_b2_up
    enabled: "{{ not current_reverse }}"
    id: fast_brighter
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: on_b1_up
    enabled: "{{ current_reverse }}"
    id: fast_brighter

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: on_b2_down
    enabled: "{{ not current_reverse }}"
    id: fast_darker
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: on_b1_down
    enabled: "{{ current_reverse }}"
    id: fast_darker

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: off_b2_up
    enabled: "{{ not current_reverse }}"
    id: full_brighter
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: off_b1_up
    enabled: "{{ current_reverse }}"
    id: full_brighter

  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: off_b2_down
    enabled: "{{ not current_reverse }}"
    id: full_darker
  - trigger: device
    device_id: !input wall_switch
    domain: mqtt
    type: action
    subtype: off_b1_down
    enabled: "{{ current_reverse }}"
    id: full_darker

variables:
  current_room: !input room
  current_scene_helper: !input scene_helper
  current_extra_light: !input extra_light
  current_stop_helper: !input stop_helper
  current_direct_link: !input direct_link
  matched_scenes: >
    {{ states.scene
      | selectattr('entity_id','match','^scene\\.' ~ current_room)
      | map(attribute='entity_id')
      | sort
      | list }}
  current_scene_index: "{{ states[current_scene_helper].state | int }}"
  next_scene_index: >
    {% set length = matched_scenes | length %}
    {% if length == 0 %}
      -1
    {% else %}
      {{ (current_scene_index + 1) % length }}
    {% endif %}
  next_next_scene_index: >
    {% set length = matched_scenes | length %}
    {% if length == 0 %}
      -1
    {% else %}
      {{ (current_scene_index + 2) % length }}
    {% endif %}

actions:
  - choose:
      - conditions:
          - condition: trigger
            id: turn_on
        sequence:
          - if:
              - condition: template
                value_template: "{{ current_stop_helper is not none }}"
            then:
              - action: input_boolean.turn_on
                target:
                  entity_id: !input stop_helper
          - if:
              - condition: state
                entity_id: !input light
                state: "on"
            then:
              - action: input_number.set_value
                data:
                  entity_id: !input scene_helper
                  value: "{{ next_scene_index }}"
              - action: scene.turn_on
                data:
                  entity_id: "{{ matched_scenes[next_scene_index] }}"
            else:
              - sequence: !input before_on
              - action: input_number.set_value
                data:
                  entity_id: !input scene_helper
                  value: "0"
              - action: light.turn_on
                data:
                  transition: 0
                target:
                  entity_id: !input light

      - conditions:
          - condition: trigger
            id: turn_off
        sequence:
          - if:
              - condition: template
                value_template: "{{ current_direct_link }}"
            then:
              - if:
                  - condition: state
                    entity_id: !input light
                    state: "off"
                then:
                  - action: light.turn_off
                    target:
                      entity_id: !input light
                    data:
                      transition: off
                  - delay:
                      milliseconds: 200
                  - action: light.turn_off
                    target:
                      entity_id: !input light
                    data:
                      transition: off
            else:
              - action: light.turn_off
                target:
                  entity_id: !input light
                data:
                  transition: off
          - sequence: !input after_off
          - action: input_boolean.turn_off
            target:
              entity_id: !input stop_helper

      - conditions:
          - condition: trigger
            id: brighter
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input light
                    state: "on"
                sequence:
                  - sequence: !input before_on
                  - choose:
                      - conditions:
                          - condition: template
                            value_template: "{{ current_extra_light is not none }}"
                        sequence:
                          - action: light.turn_on
                            target:
                              entity_id: !input extra_light
                    default:
                      - action: light.turn_on
                        target:
                          entity_id: !input light
                        data:
                          brightness_step_pct: 10
              - conditions:
                  - condition: state
                    entity_id: !input light
                    state: "off"
                sequence:
                  - sequence: !input before_on
                  - action: light.turn_on
                    target:
                      entity_id: !input light

      - conditions:
          - condition: trigger
            id: fast_brighter
          - condition: state
            entity_id: !input light
            state: "on"
        sequence:
          - sequence: !input before_on
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: 20

      - conditions:
          - condition: trigger
            id: fast_turn_on
        sequence:
          - choose:
              - conditions:
                  - condition: state
                    entity_id: !input light
                    state: "on"
                sequence:
                  - action: input_number.set_value
                    data:
                      entity_id: !input scene_helper
                      value: "{{ next_next_scene_index }}"
                  - action: scene.turn_on
                    data:
                      entity_id: "{{ matched_scenes[next_next_scene_index] }}"

      - conditions:
          - condition: trigger
            id: full_turn_off
        sequence: !input long_off

      - conditions:
          - condition: trigger
            id: full_brighter
        sequence:
          - sequence: !input before_on
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_pct: 100

      - conditions:
          - condition: trigger
            id: darker
          - condition: state
            entity_id: !input light
            state: "on"
        sequence:
          - sequence: !input before_on
          - choose:
              - conditions:
                  - condition: template
                    value_template: "{{ current_extra_light is not none }}"
                sequence:
                  - action: light.turn_off
                    target:
                      entity_id: !input extra_light
            default:
              - action: light.turn_on
                target:
                  entity_id: !input light
                data:
                  brightness_step_pct: -10

      - conditions:
          - condition: trigger
            id: fast_darker
          - condition: state
            entity_id: !input light
            state: "on"
        sequence:
          - sequence: !input before_on
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_step_pct: -20

      - conditions:
          - condition: trigger
            id: full_darker
        sequence:
          - sequence: !input before_on
          - action: light.turn_on
            target:
              entity_id: !input light
            data:
              brightness_pct: 1

    default: []
